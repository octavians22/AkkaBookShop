version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: user-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  broker1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

  broker2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker2
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"

    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

  broker3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker3
    depends_on:
      - zookeeper
    ports:
      - "29094:29094"

    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092,PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker3:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous


  kafka-ui-akka:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-akka
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker1:9092,broker2:9092,broker3:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181


  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5440:5432"
    volumes:
      - ./volumes/book_service:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=book_db

  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    ports:
      - "3307:3307"
    volumes:
      - ./volumes/review_service:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: review_db
      MYSQL_PASSWORD: root

  booking_service:
    depends_on:
      - postgres_db
      - zookeeper
    build:
      context: ./BookService
    container_name: booking_service
    ports:
      - "8083:8083"
    environment:
      SERVER_PORT: 8083
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/book_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

volumes:
  db: